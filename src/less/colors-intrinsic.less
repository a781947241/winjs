// Copyright (c) Microsoft Open Technologies, Inc.  All Rights Reserved. Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.
.Colors(@theme) {

    // Panning indicator is only styled on phone
    * when (@platform = phone) {
        .mixin(dark) {
            -ms-scrollbar-shadow-color: rgb(0, 0, 0);
            -ms-scrollbar-face-color: rgb(255, 255, 255);
        }
        .mixin(light) {
            -ms-scrollbar-shadow-color: rgb(255, 255, 255);
            -ms-scrollbar-face-color: rgb(0, 0, 0);
        }
        .mixin(@theme);
    }

    // These classes reverse the colors on the subtree to which they are applied.
    // Ensure that the opposite color scheme always comes after the rule that is for the current color scheme.
    // This ensures that an author using <div class="win-ui-dark win-ui-light"> will always get the rule for the
    // inverted scheme to match last and win.
    .bodyTheme(dark) when (@platform = desktop) {
        color: rgb(255, 255, 255);
        background-color: rgb(29, 29, 29);
    }
    .bodyTheme(light) when (@platform = desktop) {
        color: rgb(0, 0, 0);
        background-color: rgb(255, 255, 255);
    }
    .bodyTheme(dark) when (@platform = phone) {
        color: @win_light_text_high;
        background-color: rgb(0, 0, 0);
    }
    .bodyTheme(light) when (@platform = phone) {
        color: @win_dark_text_high;
        background-color: rgb(255, 255, 255);
    }
    .themeMixin(dark) {
        .win-ui-dark {
            .bodyTheme(dark);
        }
        .win-ui-light {
            .bodyTheme(light);
        }
    }
    .themeMixin(light) {
        .win-ui-light {
            .bodyTheme(light);
        }
        .win-ui-dark {
            .bodyTheme(dark);
        }
    }
    .themeMixin(@theme);

    //
    // Body
    //
    body, input, textarea, select, button {
        .bodyTheme(@theme);
    }

    //
    // Text selection
    //
    ::selection {
        color: rgb(255, 255, 255);

        & when (@platform = desktop) {
            background-color: rgb(87, 41, 193);
        }
        & when (@platform = phone) {
            background-color: Highlight;
        }
    }

    //
    // Text input
    //
    input[type=text], input[type=password],
    input[type=email], input[type=number],
    input[type=tel], input[type=url],
    input[type=search], textarea, .win-textarea {
        // Dark colors
        .mixin(dark) {
            &:hover when (@platform = desktop) {
                background-color: rgba(255, 255, 255, 0.87);
            }

            &:focus {
                background-color: rgb(255, 255, 255);

                & when (@platform = phone) {
                    border-color: Highlight;
                }
            }

            &:disabled {
                background-color: transparent;
                border-color: rgba(255, 255, 255, 0.4);

                & when (@platform = desktop) {
                    color: rgba(255, 255, 255, 0.4);
                }
                & when (@platform = phone) {
                    color: @win_light_text_low;
                }
            }

            &:disabled:-ms-input-placeholder when (@platform = desktop) {
                color: rgba(255, 255, 255, 0.22);
            }
            &:disabled:-ms-input-placeholder when (@platform = phone) {
                color: @win_light_text_low;
            }

            & when (@platform = desktop) {
                border-color: transparent;
            }
            & when (@platform = phone) {
                background-color: rgba(255, 255, 255, 0.8);
            }
        }
        // Light colors
        .mixin(light) {
            &:hover when (@platform = desktop) {
                background-color: rgba(255, 255, 255, 0.87);
                border-color: rgba(0, 0, 0, 0.44);
            }

            &:focus {
                background-color: rgb(255, 255, 255);

                & when (@platform = phone) {
                    border-color: Highlight;
                    color: @win_dark_text_high;
                }
            }

            &:disabled {
                border-color: rgba(0, 0, 0, 0.15);

                & when (@platform = desktop) {
                    background-color: rgba(202, 202, 202, 0.4);
                    color: rgba(0, 0, 0, 0.4);
                }
                & when (@platform = phone) {
                    background-color: transparent;
                    color: @win_dark_text_low;
                }
            }

            &:disabled:-ms-input-placeholder when (@platform = desktop) {
                color: rgba(0, 0, 0, 0.22);
            }
            &:disabled:-ms-input-placeholder when (@platform = phone) {
                color: @win_dark_text_low;
            }

            & when (@platform = desktop) {
                border-color: rgba(0, 0, 0, 0.27);
            }
            & when (@platform = phone) {
                background-color: rgba(0, 0, 0, 0.2);
            }
        }
        .mixin(@theme);

        &:-ms-input-placeholder when (@platform = desktop) {
            color: rgba(0, 0, 0, 0.6);
        }
        &:-ms-input-placeholder when (@platform = phone) {
            color: rgba(0, 0, 0, 0.25)
        }

        & when (@platform = desktop) {
            background-color: rgba(255, 255, 255, 0.8);
            color: rgb(0, 0, 0);
        }
        & when (@platform = phone) {
            border-color: transparent;
            color: @win_dark_text_high;
        }
    }

    //
    // Radio and Checkbox
    //
    input::-ms-check when (@platform = desktop) {
        .mixin(dark) {
            border-color: transparent;
        }
        .mixin(light) {
            border-color: rgba(0, 0, 0, 0.27);
        }
        .mixin(@theme);

        background-color: rgba(255, 255, 255, 0.8);
        color: rgb(0, 0, 0);
    }
    input::-ms-check when (@platform = phone) {
        .mixin(dark) {
            border-color: rgb(255, 255, 255);
            color: rgb(255, 255, 255);
        }
        .mixin(light) {
            border-color: rgb(0, 0, 0);
            color: rgb(0, 0, 0);
        }
        .mixin(@theme);

        background-color: transparent;
    }

    input:hover::-ms-check when (@platform = desktop) {
        .mixin(dark) {
        }
        .mixin(light) {
            border-color: rgba(0, 0, 0, 0.44);
        }
        .mixin(@theme);

        background-color: rgba(255, 255, 255, 0.87);
    }

    input:disabled::-ms-check {
        .mixin(dark, desktop) {
            background-color: rgba(255, 255, 255, 0.4);
            border-color: transparent;
        }
        .mixin(dark, phone) {
            border-color: rgba(255, 255, 255, 0.4);
            color: rgba(255, 255, 255, 0.4);
        }
        .mixin(light, desktop) {
            background-color: rgba(202, 202, 202, 0.4);
            border-color: rgba(0, 0, 0, 0.15);
        }
        .mixin(light, phone) {
            border-color: rgba(0, 0, 0, 0.15);
            color: @win_dark_text_low;
        }
        .mixin(@theme, @platform);

        & when (@platform = desktop) {
            color: rgba(0, 0, 0, 0.4);
        }
        & when (@platform = phone) {
            background-color: transparent;
        }
    }

    input:enabled:hover:active::-ms-check {
        .mixin(dark, desktop) {
            background-color: rgb(255, 255, 255);
        }
        .mixin(dark, phone) {
            background-color: Highlight;
        }
        .mixin(light, desktop) {
            background-color: rgb(0, 0, 0);
            border-color: transparent;
            color: rgb(255, 255, 255);
        }
        .mixin(light, phone) {
            background-color: Highlight;
            color: rgb(255, 255, 255);
        }
        .mixin(@theme, @platform);
    }

    input:-ms-keyboard-active::-ms-check when (@platform = desktop) {
        .mixin(dark) {
            background-color: rgb(255, 255, 255);
        }
        .mixin(light) {
            background-clip: border-box;
            background-color: rgb(0, 0, 0);
            border-color: transparent;
            color: rgb(255, 255, 255);
        }
        .mixin(@theme);
    }

    //
    // Clear and reveal buttons
    //
    & when (@platform = desktop) {
        input::-ms-clear, input::-ms-reveal {
            background-color: rgb(255, 255, 255);
            color: rgb(0, 0, 0);
        }
        input::-ms-clear:hover, input::-ms-reveal:hover {
            background-color: rgb(222, 222, 222);
        }
        input::-ms-clear:hover:active, input::-ms-reveal:hover:active {
            background-color: rgb(0, 0, 0);
            color: rgb(255, 255, 255);
        }
    }

    //
    // Invalid input
    //
    input[type]:invalid {
        outline-color: rgb(255, 128, 51);
        outline-width: 2px;
    }

    //
    // Button
    //
    input[type=file] {
        .mixin(dark) {
            &::-ms-browse {
                color: @win_light_text_high;
                border-color: rgb(255, 255, 255);
                background-color: transparent;
            }

            &::-ms-value {
                background-color: transparent;
                border-color: rgba(255, 255, 255, 0.4);
                color: @win_light_text_low;
            }

            &::-ms-browse:hover:active when (@platform = desktop) {
                background-color: rgb(255, 255, 255);
                color: rgb(0, 0, 0);
            }
            &::-ms-browse:hover:active when (@platform = phone) {
                background-color: Highlight;
            }

            &::-ms-browse:hover when (@platform = desktop) {
                background-color: rgba(255, 255, 255, 0.13);
            }

            &:disabled::-ms-browse {
                border-color: rgba(255, 255, 255, 0.4);
                color: @win_light_text_low;
            }
        }
        .mixin(light) {
            &::-ms-browse when (@platform = desktop) {
                color: @win_dark_text_high;
                border-color: rgba(0, 0, 0, 0.2);
                background-color: rgba(182, 182, 182, 0.7);
            }
            &::-ms-browse when (@platform = phone) {
                color: @win_dark_text_high;
                border-color: rgb(0, 0, 0);
                background-color: transparent;
            }

            &::-ms-value when (@platform = desktop) {
                color: @win_dark_text_low;
                border-color: rgba(0, 0, 0, 0.15);
                background-color: rgba(202, 202, 202, 0.4);
            }
            &::-ms-value when (@platform = phone) {
                color: @win_dark_text_low;
                border-color: rgba(0, 0, 0, 0.4);
                background-color: transparent;
            }

            &::-ms-browse:hover:active when (@platform = desktop) {
                background-color: rgb(0, 0, 0);
                color: rgb(255, 255, 255);
            }
            &::-ms-browse:hover:active when (@platform = phone){
                background-color: Highlight;
            }

            &::-ms-browse:hover when (@platform = desktop) {
                background-color: rgba(205, 205, 205, 0.82);
                border-color: rgba(164, 164, 164, 0.45);
            }

            &:disabled::-ms-browse {
                color: @win_dark_text_low;
                border-color: rgba(0, 0, 0, 0.15);

                & when (@platform = desktop) {
                    background-color: rgba(202, 202, 202, 0.4);
                }
                & when (@platform = phone) {
                    background-color: transparent;
                }
            }
        }
        .mixin(@theme);

        background-color: transparent;
        border-color: transparent;
        color: transparent;
    }

    // Buttons are styled pretty differently between desktop and phone, so it seems
    // easier to just have completely separate rules for each platform
    & when (@platform = desktop) {
        button, input[type=button], input[type=reset] {
            .mixin(dark) {
                &:enabled:hover:active {
                    background-color: rgb(255, 255, 255);
                    color: rgb(0, 0, 0);
                }

                &:enabled:hover {
                    background-color: rgba(255, 255, 255, 0.13);
                }

                &:disabled {
                    border-color: rgba(255, 255, 255, 0.4);
                    color: rgba(255, 255, 255, 0.4);
                }

                color: rgb(255, 255, 255);
                background-color: transparent;
                border-color: rgb(255, 255, 255);
            }
            .mixin(light) {
                &:enabled:hover:active {
                    background-color: rgb(0, 0, 0);
                    border-color: rgb(0, 0, 0);
                    color: rgb(255, 255, 255);
                }

                &:enabled:hover {
                    background-color: rgba(205, 205, 205, 0.82);
                    border-color: rgba(164, 164, 164, 0.45);
                }

                &:disabled {
                    background-color: rgba(202, 202, 202, 0.4);
                    border-color: rgba(0, 0, 0, 0.08);
                    color: rgba(0, 0, 0, 0.4);
                }

                color: rgb(0, 0, 0);
                border-color: rgba(0, 0, 0, 0.2);
                background-color: rgba(182, 182, 182, 0.7);
            }
            .mixin(@theme);
        }

        button[type=submit], input[type=submit] {
            .mixin(dark) {
                &:enabled:hover:active {
                    background-color: rgb(255, 255, 255);
                    border-color: transparent;
                    color: rgb(0, 0, 0);
                }

                &:hover {
                    background-color: rgb(95, 55, 190);
                    border-color: rgb(255, 255, 255);
                }

                &:disabled {
                    background-color: transparent;
                    border-color: rgba(255, 255, 255, 0.4);
                    color: rgba(255, 255, 255, 0.4);
                }
            }
            .mixin(light) {
                &:enabled:hover:active {
                    background-color: rgb(0, 0, 0);
                    border-color: transparent;
                    color: rgb(255, 255, 255);
                }

                &:hover {
                    background-color: rgb(95, 55, 190);
                    border-color: transparent;
                }

                &:disabled {
                    background-color: rgba(202, 202, 202, 0.4);
                    border-color: rgba(0, 0, 0, 0.08);
                    color: rgba(0, 0, 0, 0.4);
                }
            }
            .mixin(@theme);

            background-color: rgb(70, 23, 180);
            border-color: transparent;
            color: rgb(255, 255, 255);
        }
    }

    // Phone button style
    & when (@platform = phone) {
        button, input[type=button], input[type=reset],
        button[type=submit], input[type=submit] {
            .mixin(dark) {
                &:enabled:hover:active {
                    background-color: Highlight;
                }

                &:disabled {
                    border-color: rgba(255, 255, 255, 0.4);
                    color: @win_light_text_low;
                }

                color: @win_light_text_high;
                border-color: rgb(255, 255, 255);
            }
            .mixin(light) {
                &:enabled:hover:active {
                    background-color: Highlight;
                }

                &:disabled {
                    border-color: rgba(0, 0, 0, 0.4);
                    color: @win_dark_text_low;
                }

                color: @win_dark_text_high;
                border-color: rgb(0, 0, 0);
                background-color: transparent;
            }
            .mixin(@theme);

            background-color: transparent;
        }
    }

    // Keyboard active has to be handled separately
    button:-ms-keyboard-active, button[type=submit]:-ms-keyboard-active,
    input[type=button]:-ms-keyboard-active, input[type=reset]:-ms-keyboard-active,
    input[type=submit]:-ms-keyboard-active {
        .mixin(dark) {
            background-color: rgb(255, 255, 255);
            color: rgb(0, 0, 0);
        }
        .mixin(light) {
            background-color: rgb(0, 0, 0);
            color: rgb(255, 255, 255);
        }
        .mixin(@theme);

        background-clip: border-box;
        border-color: transparent;
    }


    //
    // Dropdown
    // Also quite different between desktop and phone.
    //
    select when (@platform = desktop) {
        .mixin(dark) {
            &:hover {
                background-color: rgba(255, 255, 255, 0.87);
            }

            &:enabled:focus {
                background-color: rgb(255, 255, 255);
            }

            &:disabled {
                background-color: transparent;
                border-color: rgba(255, 255, 255, 0.4);
                color: rgba(255, 255, 255, 0.4);

                option:checked {
                    background-color: rgba(255, 255, 255, 0.4);
                    color: rgba(0, 0, 0, 0.6);
                }
            }

            &::-ms-expand {
                background-color: transparent;
            }

            border-color: transparent;
        }
        .mixin(light) {
            &:enabled:focus {
                background-color: rgb(255, 255, 255);
                border-color: rgba(0, 0, 0, 0.6);
            }

            &:disabled {
                background-color: rgba(202, 202, 202, 0.4);
                border-color: rgba(0, 0, 0, 0.15);
                color: rgba(0, 0, 0, 0.4);

                option:checked {
                    background-color: rgba(0, 0, 0, 0.55);
                    color: rgba(255, 255, 255, 0.6);
                }
            }

            &::-ms-expand {
                background-color: transparent;
            }

            border-color: transparent;
        }
        .mixin(@theme);

        &:enabled:focus {
            option:hover {
                background-color: rgb(222, 222, 222);
            }

            option:checked:hover {
                color: rgb(255, 255, 255);
                background-color: rgb(95, 55, 190);
            }
        }

        &:hover {
            background-color: rgba(255, 255, 255, 0.87);
        }

        background-color: rgba(255, 255, 255, 0.8);
        color: rgb(0, 0, 0);
    }

    select when (@platform = phone) {
        .mixin(dark) {
            &:disabled {
                background-color: transparent;
                border-color: rgba(255, 255, 255, 0.4);
                color: @win_light_text_low;

                option:checked {
                    background-color: rgba(255, 255, 255, 0.4);
                    color: rgba(0, 0, 0, 0.3);
                }
            }

            &::-ms-expand {
                background-color: transparent;
            }

            border-color: rgb(255, 255, 255);
            color: @win_light_text_high;
        }
        .mixin(light) {
            &:disabled {
                background-color: transparent;
                border-color: rgba(0, 0, 0, 0.15);
                color: @win_dark_text_low;

                option:checked {
                    background-color: rgba(0, 0, 0, 0.55);
                    color: rgba(0, 0, 0, 0.3);
                }
            }

            &::-ms-expand {
                background-color: transparent;
            }

            border-color: rgb(0, 0, 0);
            color: @win_dark_text_high;
        }
        .mixin(@theme);

        &:enabled:focus {
            background-color: rgb(255, 255, 255);
            border-color: Highlight;
            color: @win_dark_text_high;
        }

        background-color: transparent;
    }

    //
    // Select option
    //
    option when (@platform = desktop) {
        &:hover {
            background-color: rgb(197, 197, 197);
        }

        &:checked:hover {
            background-color: rgb(95, 55, 190);
        }

        &:checked {
            color: rgb(255, 255, 255);
            background-color: rgb(70, 23, 180);
        }
    }
    option when (@platform = phone) {
        &:hover:active {
            background-color: rgb(255, 255, 255);
        }

        &:checked {
            color: Highlight;
            background-color: transparent;
        }

        &:checked:disabled {
            .mixin(dark) {
                background-color: rgba(255, 255, 255, 0.4);
            }
            .mixin(light) {
                background-color: rgba(0, 0, 0, 0.55);
            }
            .mixin(@theme);
            color: @win_dark_text_low;
        }
    }

    optgroup:disabled {
        option:checked, option:checked:active {
            .mixin(dark) {
                background-color: rgba(255, 255, 255, 0.4);
                color: rgba(0, 0, 0, 0.6) ;
            }
            .mixin(light) {
                background-color: rgba(0, 0, 0, 0.55);
                color: rgba(255, 255, 255, 0.6) ;
            }
            .mixin(@theme);
        }
    }

    //
    // Progress
    //
    progress when (@platform = desktop) {
        .mixin(dark) {
            &:indeterminate {
                background-color: transparent;
                color: rgb(138, 87, 255);
            }

            &:-ms-fill {
                background-color: currentColor;
            }

            background-color: rgba(255, 255, 255, 0.35);
            color: rgb(91, 46, 197);
        }
        .mixin(light) {
            &:indeterminate {
                background-color: transparent;
                color: rgb(70, 23, 180);
            }

            &:-ms-fill {
                background-color: currentColor;
            }

            background-color: rgba(0, 0, 0, 0.2);
            color: rgb(70, 23, 180);
        }
        .mixin(@theme);
    }
    progress when (@platform = phone) {
        .mixin(dark) {
            background-color: rgba(255, 255, 255, 0.1);
        }
        .mixin(light) {
            background-color: rgba(0, 0, 0, 0.095);
        }
        .mixin(@theme);

        &:indeterminate {
            background-color: transparent;
            color: Highlight;
        }

        &:-ms-fill {
            background-color: currentColor;
        }

        color: Highlight;
    }

    //
    // Slider
    //
    input[type=range] {
        .mixin(dark) {
            &::-ms-fill-lower when (@platform = desktop) {
                background-color: rgb(91, 46, 197);
            }

            &::-ms-fill-upper {
                background-color: rgba(255, 255, 255, 0.16);
            }

            &::-ms-thumb {
                background-color: rgb(255, 255, 255);
            }

            &::-ms-ticks-before, &::-ms-ticks-after {
                color: rgba(255, 255, 255, 0.5);
            }

            &:enabled:hover::-ms-fill-lower when (@platform = desktop) {
                background-color: rgb(114, 75, 205);
            }

            &:enabled:hover::-ms-fill-upper when (@platform = desktop) {
                background-color: rgba(255, 255, 255, 0.18);
            }

            &:disabled::-ms-fill-lower {
                background-color: rgba(255, 255, 255, 0.23);
            }

            &:disabled::-ms-fill-upper {
                background-color: rgba(255, 255, 255, 0.16);
            }

            &:disabled::-ms-thumb {
                background-color: rgb(126, 126, 126);
            }
        }
        .mixin(light) {
            &::-ms-fill-lower when (@platform = desktop) {
                background-color: rgb(70, 23, 180);
            }

            &::-ms-fill-upper {
                background-color: rgba(0, 0, 0, 0.1);
            }

            &::-ms-thumb {
                background-color: rgb(0, 0, 0);
            }

            &::-ms-ticks-before, &::-ms-ticks-after {
                color: rgba(0, 0, 0, 0.5);
            }

            &:enabled:hover::-ms-fill-lower when (@platform = desktop) {
                background-color: rgb(95, 55, 190);
            }

            &:enabled:hover::-ms-fill-upper when (@platform = desktop) {
                background-color: rgba(0, 0, 0, 0.15);
            }

            &:disabled::-ms-fill-lower {
                background-color: rgba(0, 0, 0, 0.2);
            }

            &:disabled::-ms-fill-upper {
                background-color: rgba(0, 0, 0, 0.1);
            }

            &:disabled::-ms-thumb {
                background-color: rgb(146, 146, 146);
            }
        }
        .mixin(@theme);

        &::-ms-fill-lower when (@platform = phone) {
            background-color: Highlight;
        }

        &::-ms-track {
            background-color: transparent;
            color: transparent;
        }

        background-color: transparent;
    }

    //
    // Link
    //
    a when (@platform = desktop) {
        .mixin(dark) {
            &:hover:active {
                color: rgba(156, 114, 255, 0.6);
            }

            &:hover {
                color: rgba(156, 114, 255, 0.8);
            }

            /*
            :disabled pseudo-class doesn't apply to a,
            even though disabled attribute stops navigation
            */
            &[disabled], &[disabled]:active {
                color: rgba(255, 255, 255, 0.4);
            }

            color: rgb(156, 114, 255);
        }
        .mixin(light) {
            &:hover:active {
                color: rgba(79, 26, 203, 0.6);
            }

            &:hover {
                color: rgba(79, 26, 203, 0.8);
            }

            &[disabled], &[disabled]:active {
                color: rgba(0, 0, 0, 0.4);
            }

            color: rgb(79, 26, 203);
        }
        .mixin(@theme);
    }
    a when (@platform = phone) {
        .mixin(dark) {
            &[disabled], &[disabled]:active {
                color: rgba(255, 255, 255, 0.4);
            }
        }
        .mixin(light) {
            &[disabled], &[disabled]:active {
                color: rgba(0, 0, 0, 0.4);
            }
        }
        .mixin(@theme);

        color: Highlight;
    }

    // The "-ms-keyboard-active" pseudo is not always supported. When it is not supported
    // it will be treated as a CSS parse error and will throw out all rules in the current
    // CSS rule group. For this reason, never group it with other rules.
    .win-type-interactive {
        .mixin(dark) {
            &:-ms-keyboard-active {
                color: rgba(255, 255, 255, 0.4);
            }

            &:hover:active {
                color: rgba(255, 255, 255, 0.4);
            }

            &:hover when (@platform = desktop) {
                color: rgba(255, 255, 255, 0.8);
            }
        }
        .mixin(light) {
            &:-ms-keyboard-active {
                color: rgba(0, 0, 0, 0.4);
            }

            &:hover:active {
                color: rgba(0, 0, 0, 0.4);
            }

            &:hover when (@platform = phone) {
                color: rgba(0, 0, 0, 0.8);
            }
        }
        .mixin(@theme);
    }
}

//
// High contrast styles
//
@media (-ms-high-contrast) {
    // Desktop colors
    & when (@platform = desktop) {
        .win-type-interactive {
            color: WindowText;
        }
        .win-type-interactive:hover, .win-type-interactive:hover:active {
            color: -ms-hotlight;
        }
        .win-type-interactive:-ms-keyboard-active {
            color: -ms-hotlight;
        }

        /*
        Text selection high contrast color.
        */
        ::selection, select:focus::-ms-value {
            background-color: Highlight;
            color: HighlightText;
        }

        /*
        Button
        */
        button, input[type=button], input[type=reset],
        input[type=file]::-ms-browse {
            background-color: ButtonFace;
            border-color: ButtonText;
            color: ButtonText;
        }

        button[type=submit], input[type=submit] {
            background-color: Highlight;
            border-color: ButtonText;
            color: HighlightText;
        }

        button:hover:active, button[type=submit]:hover:active, input[type=button]:hover:active,
        input[type=submit]:hover:active, input[type=reset]:hover:active,
        input[type=file]::-ms-browse:hover:active {
            background-clip: border-box;
            background-color: ButtonText;
            border-color: transparent;
            color: ButtonFace;
        }
        button:disabled, button[type=submit]:disabled, input[type=button]:disabled,
        input[type=submit]:disabled, input[type=reset]:disabled,
        input[type=file]:disabled::-ms-browse, button:disabled:active, button[type=submit]:disabled:active,
        input[type=button]:disabled:active, input[type=submit]:disabled:active,
        input[type=reset]:disabled:active, input[type=file]:disabled::-ms-browse:active {
            background-color: ButtonFace;
            border-color: GrayText;
            color: GrayText;
        }

        button:-ms-keyboard-active, button[type=submit]:-ms-keyboard-active, input[type=button]:-ms-keyboard-active,
        input[type=submit]:-ms-keyboard-active, input[type=reset]:-ms-keyboard-active {
            background-clip: border-box;
            background-color: ButtonText;
            border-color: transparent;
            color: ButtonFace;
        }

        button:hover, input[type=button]:hover, input[type=reset]:hover,
        input::-ms-clear:hover, input::-ms-reveal:hover,
        input[type=file]::-ms-browse:hover {
            background-color: Highlight;
            border-color: ButtonText;
            color: HighlightText;
        }

        input::-ms-clear:hover:active, input::-ms-reveal:hover:active {
            background-clip: border-box;
            background-color: ButtonText;
            border-color: transparent;
            color: ButtonFace;
        }
        input:disabled::-ms-clear, input:disabled::-ms-reveal, select:disabled::-ms-expand {
            background-color: ButtonFace;
            border-color: GrayText;
            color: GrayText;
        }

        input::-ms-clear, input::-ms-reveal, select::-ms-expand {
            background-color: ButtonFace;
            border-color: ButtonText;
            color: ButtonText;
        }

        /*
        Select
        */
        select:active:not(:disabled)::-ms-expand {
            color: ButtonFace;
            background-color: ButtonText;
        }
        option:checked, select:focus::-ms-value {
            color: HighlightText;
            background-color: Highlight;
        }
        select:active:not(:disabled)::-ms-value,
        option:hover:active, option:checked:hover:active {
            color: ButtonFace;
            background-color: ButtonText;
        }
        option:checked:disabled, option:checked:disabled:active,
        optgroup:disabled option:checked, optgroup:disabled option:checked:active,
        select:disabled option:checked, select:disabled option:checked:active,
        select:disabled:focus::-ms-value {
            color: ButtonFace;
            background-color: GrayText;
        }

        /*
        Link high contrast colors.
        */
        a {
            color: -ms-hotlight;
        }
        a[disabled] {
            color: GrayText;
        }

        /*
        Text input, checkbox, radio, and select high contrast colors.
        */
        input:hover::-ms-check { /* only checkbox and radio have hover state */
            background-color: Highlight;
            color: HighlightText;
        }

        input[type=text], input[type=password],
        input[type=email], input[type=number],
        input[type=tel], input[type=url],
        input[type=search], textarea, .win-textarea, select,
        input::-ms-check {
            background-color: ButtonFace;
            border-color: ButtonText;
            color: ButtonText;
        }
        input:hover:active::-ms-check { /* only checkbox and radio have active state */
            background-clip: border-box;
            background-color: ButtonText;
            border-color: transparent;
            color: ButtonFace;
        }
        input[type=text]:disabled, input[type=password]:disabled,
        input[type=email]:disabled, input[type=number]:disabled,
        input[type=tel]:disabled, input[type=url]:disabled,
        input[type=search]:disabled, input[type=file]::-ms-value,
        textarea:disabled, .win-textarea:disabled, select:disabled,
        input:disabled::-ms-check, input:disabled:active::-ms-check {
            border-color: GrayText;
            color: ButtonText;
            background-color: ButtonFace;
        }
        input:disabled::-ms-check, input:disabled:active::-ms-check,
        input[type]:-ms-input-placeholder, textarea:-ms-input-placeholder,
        select:disabled::-ms-value {
            color: GrayText;
        }
        input:-ms-keyboard-active::-ms-check { /* only checkbox and radio have active state */
            background-clip: border-box;
            background-color: ButtonText;
            border-color: transparent;
            color: ButtonFace;
        }

        /*
        Progress high contrast colors.
        */
        progress {
            border: 1px solid ButtonText;
            background-color: ButtonFace;
            color: Highlight;
        }
        progress:indeterminate {
            border: transparent;
        }
        progress::-ms-fill {
            border-right: 1px solid ButtonText;
            background-color: Highlight;
        }
        progress.win-paused:not(:indeterminate)::-ms-fill {
            background-color: GrayText;
        }
        progress.win-paused:not(:indeterminate) {
            opacity: 1.0;
        }

        /*
        Slider
        */
        input[type=range]::-ms-track {
            border: 1px solid ButtonText;
            background-color: ButtonFace;
            color: transparent;
        }
        input[type=range]:disabled::-ms-track {
            border-color: GrayText;
        }
        input[type=range]::-ms-fill-lower {
            background-color: Highlight;
        }
        input[type=range]:disabled::-ms-fill-lower {
            background-color: transparent;
        }
        input[type=range]::-ms-ticks-before,
        input[type=range]::-ms-ticks-after {
            color: ButtonText;
        }
        input[type=range]:disabled::-ms-ticks-before,
        input[type=range]:disabled::-ms-ticks-after {
            color: GrayText;
        }
        input[type=range]::-ms-thumb {
            background-color: ButtonText;
            border-left: 1px solid HighlightText;
            border-right: 1px solid HighlightText;
        }
        input[type=range].win-vertical::-ms-thumb {
            border-left-style: none;
            border-right-style: none;
            border-top: 1px solid HighlightText;
            border-bottom: 1px solid HighlightText;
        }
        input[type=range]:active::-ms-thumb {
            background-color: HighlightText;
            border-color: ButtonText;
        }
        input[type=range]:disabled::-ms-thumb,
        input[type=range]:disabled:active::-ms-thumb {
            background-color: GrayText;
            border-color: GrayText;
        }
        input[type=range]:hover::-ms-thumb {
            background-color: Highlight;
        }
    }

    & when (@platform = phone) {
        //
        // Text selection color
        //
        ::selection {
            .mixin(dark) {
                background-color: rgb(255, 255, 255);
                color: rgb(0, 0, 0);
            }
            .mixin(light) {
                background-color: rgb(0, 0, 0);
                color: rgb(255, 255, 255);
            }
            .mixin(@theme);
        }

        //
        // Radio and check button
        //
        input::-ms-check:hover:active, input::-ms-check:active {
            .mixin(dark) {
                background-color: rgb(255, 255, 255);
                color: rgb(0, 0, 0);
            }
            .mixin(light) {
                background-color: rgb(0, 0, 0);
                color: rgb(255, 255, 255);
            }
            .mixin(@theme);
        }

        //
        // Button
        //
        button:hover:active, input[type=button]:hover:active, input[type=submit]:hover:active {
            .mixin(dark) {
                background-color: rgb(255, 255, 255);
                color: rgb(0, 0, 0);
            }
            .mixin(light) {
                background-color: rgb(0, 0, 0);
                color: rgb(255, 255, 255);
            }
            .mixin(@theme);
        }

        //
        // Text input
        //
        input:not([type=button]):not([type=submit]), textarea, .win-textarea {
            .mixin(dark) {
                border-color: rgb(255, 255, 255);
                color: rgb(255, 255, 255);
            }
            .mixin(light) {
                border-color: rgb(0, 0, 0);
                color: rgb(0, 0, 0);
            }
            .mixin(@theme);
            background-color: transparent;
        }

        input:not([type=button]):not([type=submit]):focus, textarea:focus, .win-textarea:focus {
            .mixin(dark) {
                border-color: rgb(255, 255, 255);
                color: rgb(255, 255, 255);
            }
            .mixin(light) {
                border-color: rgb(0, 0, 0);
                color: rgb(0, 0, 0);
            }
            .mixin(@theme);
            background-color: transparent;
        }

        input:not([type=button]):not([type=submit]):disabled, textarea:disabled, .win-textarea:disabled {
            .mixin(dark) {
                border-color: @win_light_text_low;
                color: @win_light_text_low;
            }
            .mixin(light) {
                border-color: @win_dark_text_low;
                color: @win_dark_text_low;
            }
            .mixin(@theme);
        }

        //
        // Progress bar
        //
        progress {
            .mixin(dark) {
                color: rgb(255, 255, 255);
                border-color: rgb(255, 255, 255);
            }
            .mixin(light) {
                color: rgba(0, 0, 0, 0.87);
                border-color: rgb(0, 0, 0);
            }
            .mixin(@theme);
            border-width: 0px 1px 1px 1px;
            border-style: solid;
            background-color: transparent;
        }

        progress:indeterminate {
            .mixin(dark) {
                color: rgb(255, 255, 255);
            }
            .mixin(light) {
                color: rgba(0, 0, 0, 0.87);
            }
            .mixin(@theme);
            border-style: none;
        }

        //
        // Slider
        //
        input[type=range]::-ms-track, input[type=range]:active::-ms-track {
            .mixin(dark) {
                background-color: transparent;
                border-color: rgb(255, 255, 255);
                border-style: solid;
            }
            .mixin(light) {
                background-color: transparent;
                border-color: rgb(0, 0, 0);
                border-style: solid;
            }
            .mixin(@theme);
        }

        input[type=range]:disabled::-ms-track, input[type=range]:disabled::-ms-track {
            .mixin(dark) {
                border-color: rgba(255, 255, 255, 0.4);
            }
            .mixin(light) {
                border-color: rgba(0, 0, 0, 0.3);
            }
            .mixin(@theme);
        }

        input[type=range]::-ms-fill-lower, input[type=range]:active::-ms-fill-lower {
            .mixin(dark) {
                background-color: rgb(255, 255, 255);
            }
            .mixin(light) {
                background-color: rgb(0, 0, 0);
            }
            .mixin(@theme);
        }

        input[type=range]:disabled::-ms-fill-lower, input[type=range]:disabled::-ms-fill-lower {
            .mixin(dark) {
                background-color: rgba(255, 255, 255, 0.4);
            }
            .mixin(light) {
                background-color: rgba(0, 0, 0, 0.3);
            }
            .mixin(@theme);
        }

        input[type=range]::-ms-thumb {
            .mixin(dark) {
                background-color: rgb(0, 0, 0);
                border-width: 1px;
                border-color: rgb(255, 255, 255);
                border-style: solid;
            }
            .mixin(light) {
                background-color: rgb(255, 255, 255);
                border-width: 1px;
                border-color: rgb(0, 0, 0);
                border-style: solid;
            }
            .mixin(@theme);
        }

        input[type=range]:disabled::-ms-thumb {
            .mixin(dark) {
                background-color: rgb(0, 0, 0);
                border-color: rgba(255, 255, 255, 0.4);
            }
            .mixin(light) {
                background-color: rgb(255, 255, 255);
                border-color: rgba(0, 0, 0, 0.3);
            }
            .mixin(@theme);
        }

        input[type=range]::-ms-fill-upper, input[type=range]:active::-ms-fill-upper,
        input[type=range]:disabled::-ms-fill-upper {
            background-color: transparent;
        }

        input[type=range] {
            background-color: transparent;
        }

        //
        // Link
        //
        a, a:hover, a:hover:active, a:visited {
            .mixin(dark) {
                color: rgb(255, 255, 255);
                text-decoration: underline;
            }
            .mixin(light) {
                color: rgb(0, 0, 0);
                text-decoration: underline;
            }
            .mixin(@theme);
        }
    }
}
